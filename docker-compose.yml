name: laravel

services:
    app:
        container_name: laravel-app
        build:
            context: .
            args:
                user: ${USER:-dei} # Use any username you want for the default
                uid: ${UID:-1000}
        restart: unless-stopped
        tty: true
        ports:
            - 5174:5173 # Use any port you want
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - laravel

    web:
        image: nginx:alpine
        container_name: laravel-web
        restart: unless-stopped
        tty: true
        labels:
            - "traefik.docker.network=laravel"
            - "traefik.http.routers.laravel-web.rule=Host(`laravel.localhost`)"
        ports:
            - "81:80" # Use any port you want
        volumes:
            - ./:/var/www
            - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - laravel

    mysql:
        image: mysql/mysql-server:8.0
        container_name: laravel-mysql
        ports:
            - 3307:3306 # Use any port you want
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - laravel_mysql_data:/var/lib/mysql
        networks:
            - laravel
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    traefik:
        container_name: laravel-traefik
        image: traefik:v2.11
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            - laravel

networks:
    laravel:
        driver: bridge

volumes:
    laravel_mysql_data:
        driver: local
